import {writable, get} from 'svelte/store';

import { EventoModel } from '../models/EventoModel';

import { seleccionarPersonaje } from './PersonajesStore';

export const eventoSeleccionado = writable<EventoModel | undefined>(undefined);

export const eventosStore = writable<EventoModel[]>([
  new EventoModel(1, 
    "1843", 
    "Primer algoritmo: Ada Lovelace", 
    "Escribió el primer algoritmo informático de la Historia. Ella misma fue capaz de introducirlo, por primera vez, en una máquina. Con esto pudo explicar los primeros conceptos informáticos que, todavía hoy, persisten en la actualidad. Hablamos de Augusta Ada King, más conocida como Ada Lovelace. Pionera en el mundo de la informática y uno de los nombres científicos más importantes del siglo XIX.", 
    "https://impulso06.com/wp-content/uploads/2024/01/motor-analitico.png", 
    [1]),
  new EventoModel(2, 
    "1936", 
    "La máquina de Turing", 
    "Alan Turing publica su concepto de una máquina teórica capaz de ejecutar cualquier algoritmo computable.", 
    "https://proyectoidis.org/wp-content/uploads/1936/08/Front-of-a-bombe-code-breaking-machine-at-Bletchley-Park.jpg", 
    [2]),

  new EventoModel(3,
    "1945", 
    "Informe de Von Neumann", 
    "Durante esta década, la programación se realizaba directamente en lenguaje máquina o utilizando códigos simbólicos muy cercanos al hardware. En 1949 surgió Assembly, un lenguaje de bajo nivel que permitió representar las instrucciones mediante nombres mnemotécnicos más fáciles de recordar. Uno de los pioneros en esta etapa fue John von Neumann, quien propuso la arquitectura que lleva su nombre y que todavía se utiliza en las computadoras actuales. La arquitectura de von Neumann es el modelo base de las computadoras modernas y plantea que una computadora debe contar con una memoria para almacenar datos y programas, una unidad de control que gestione la ejecución de las instrucciones, y una unidad aritmético-lógica (ALU) encargada de realizar operaciones matemáticas y lógicas.",
    "https://odiseageek.es/assets/2020/09/1280px-Eniac.jpg", 
  [3]),

  new EventoModel(4,
    "1949", 
    "Compilador de lenguaje simbólico", 
    "Desarrolló uno de los primeros lenguajes simbólicos (ensambladores) y un compilador primitivo para la computadora ARC (Automatic Relay Calculator). Su trabajo permitió traducir instrucciones simbólicas a código máquina automáticamente, facilitando la programación y sentando las bases para los futuros compiladores. Esto fue un avance importante para la computación, porque antes se programaba directamente en lenguaje máquina, mucho más difícil y propenso a errores",
    "https://culturacientifica.com/app/uploads/2023/06/booth-1.jpg", 
  [4]),

  new EventoModel(5,
    "1951", 
    "Primer programa en ensamblador", 
    "Junto con su equipo en la Universidad de Cambridge, desarrolló el primer programa en ensamblador, conocido como 'Initial Orders', para la computadora EDSAC. Este programa permitía traducir instrucciones simbólicas a lenguaje máquina, facilitando la escritura y ejecución de programas. Fue uno de los primeros pasos hacia los compiladores modernos y marcó un hito en la historia de la programación.",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0f3NT1OSGjIbF5RNnOTWfIH2H3e7fEq4T0A&s", 
  [5]),

  new EventoModel(6,
    "1957", 
    "Nacimiento de FORTRAN", 
    "En 1957, nació FORTRAN (FORmula TRANslator), el primer lenguaje de programación de alto nivel de uso comercial, desarrollado por un equipo de IBM liderado por John Backus. Su objetivo era facilitar la programación científica y matemática, permitiendo escribir instrucciones más cercanas al lenguaje humano que al código máquina. FORTRAN revolucionó la programación al introducir compiladores eficientes y sentó las bases para los lenguajes modernos.",
    "https://microchipotle.com/wp-content/uploads/2024/07/Fortran-un-lenguaje-que-revoluciono-la-programacion-IBM-704.png", 
  [6]),

  new EventoModel(7,
    "1958", 
    "Creacion de LISP", 
    "Creó LISP (LISt Processor), un lenguaje de programación diseñado para la inteligencia artificial. Fue revolucionario por su uso de listas como estructura de datos principal y por introducir conceptos como la recursión y el procesamiento simbólico. LISP se convirtió en uno de los lenguajes más influyentes en la investigación en IA y aún se utiliza en algunas aplicaciones avanzadas.",
    "https://iccsi.com.ar/wp-content/uploads/como-contribuyo-john-mccarthy-al-desarrollo-de-la-ia-1.webp", 
  [7]),

  new EventoModel(8,
    "1959", 
    "COBOL: lenguaje empresarial", 
    "Se creó COBOL (COmmon Business-Oriented Language), un lenguaje de programación diseñado para aplicaciones empresariales y administrativas. Fue impulsado por un comité del Departamento de Defensa de EE. UU., con la destacada participación de Grace Hopper, pionera en la programación. COBOL se caracterizó por su sintaxis similar al inglés, lo que facilitó su adopción en bancos, gobiernos y empresas, donde aún se usa en sistemas heredados.",
    "https://imagenes.20minutos.es/files/image_1920_1080/uploads/imagenes/2022/12/09/grace-murray-hopper.jpeg", 
  [8]),

  new EventoModel(9,
    "1964", 
    "Lenguaje BASIC", 
    "Desarrollaron el lenguaje BASIC (Beginner's All-purpose Symbolic Instruction Code) con el objetivo de facilitar el aprendizaje de la programación. Fue diseñado para ser un lenguaje simple y accesible, especialmente para estudiantes sin formación técnica. BASIC permitió que más personas pudieran programar, marcando un paso importante en la democratización de la computación.",
    "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhFmKHQhJZ9orDaIjUoC45tJ5YpNMFGaZzaJJ3PsScVHG7OcRbgFt36jTZpOzUQv1H9BTnF2M1KA_loKEimUFjbLsnldGprUKhi72w_XFJi-T7QGv_T9yabo3PV0ZIi-qZwfy7HiZrDhFk/s1600/05-01+Efemerides+de+Tecnologia+BASIC.jpg", 
  [9]),

  new EventoModel(10,
    "1967", 
    "Simula 67: Origen de POO", 
    "Desarrollaron Simula 67, un lenguaje de programación creado en Noruega para simulaciones. Fue el primer lenguaje en incorporar conceptos de programación orientada a objetos (POO), como clases, objetos y herencia. Estos conceptos revolucionaron la forma de diseñar software y se convirtieron en la base de lenguajes modernos como C++, Java y Python.",
    "https://jofrapese.blogia.com/upload/20080627221700-dahl-nygaard.jpg", 
  [10]),

  new EventoModel(11,
    "1969", 
    "Nacimineto de UNIX y C", 
    "Desarrollaron el sistema operativo UNIX, diseñado para ser simple, portátil y multitarea. Poco después, Ritchie creó el lenguaje de programación C para reescribir UNIX, lo que permitió mayor flexibilidad y portabilidad del sistema. UNIX y C marcaron un antes y un después en la informática, influenciando directamente muchos sistemas y lenguajes modernos.",
    "https://i0.wp.com/architecnologia.es/wp-content/uploads/2019/09/dennis-ritchie-ken-thompson.jpg?fit=800%2C504", 
  [11]),

  new EventoModel(12,
    "1970", 
    "Algol-W y Pascal", 
    "desarrolló el lenguaje de programación Pascal, inspirado en Algol-W, una versión previa que él mismo ayudó a crear. Pascal fue diseñado para enseñar buenas prácticas de programación estructurada y se convirtió en un lenguaje muy popular en la educación y el desarrollo de software en los años 70 y 80. Su claridad y estructura influyeron en muchos lenguajes posteriores",
    "https://imagenes.montevideo.com.uy/imgnoticias/202401/_W933_80/867825.jpg", 
  [12]),

  new EventoModel(13,
    "1972", 
    "Lenguaje C", 
    "Desarrolló el lenguaje de programación C en los laboratorios Bell. Fue diseñado para escribir sistemas operativos, especialmente UNIX, y ofrecía un equilibrio entre eficiencia y control del hardware. C se convirtió en uno de los lenguajes más influyentes de la historia, sirviendo como base para muchos otros lenguajes modernos como C++, Java y Python.",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSUfp7hATdDCDeYHvfoftifg2HmInGLsV0srw&s", 
  [13]),

  new EventoModel(14,
    "1978", 
    "Desarrollo de Scheme", 
    "En 1978, Gerald Jay Sussman y Guy L. Steele desarrollaron Scheme, un dialecto del lenguaje LISP. Scheme introdujo mejoras importantes como el uso de closures, evaluación con alcance léxico y una sintaxis más sencilla. Fue diseñado como una herramienta educativa y de investigación, y se destacó por su elegancia y simplicidad, influyendo en muchos lenguajes posteriores.",
    "https://i.redd.it/14ykouc9op6f1.png", 
    [14]),
  new EventoModel(15,
    "1980", 
    "Smalltalk y POO", 
    "En 1980, Alan Kay y su equipo popularizaron Smalltalk, un lenguaje de programación que impulsó el desarrollo de la programación orientada a objetos (POO). Smalltalk introdujo conceptos clave como objetos, clases, herencia y mensajes entre objetos, que luego influenciaron lenguajes como Java, Python y C++. Fue un paso fundamental para construir software más modular, reutilizable y fácil de mantener.",
    "https://i0.wp.com/holamundo.io/wp-content/uploads/2023/03/image-4.png?resize=444%2C307&ssl=1", 
    [15]),
  new EventoModel(16,
    "1983", 
    "Nacimiento de C++", 
    "En 1983, Bjarne Stroustrup desarrolló C++ como una extensión del lenguaje C, incorporando características de programación orientada a objetos como clases, herencia y polimorfismo. Su objetivo era combinar la eficiencia de C con la capacidad de organizar programas complejos de forma estructurada. C++ se convirtió en uno de los lenguajes más populares para el desarrollo de software de alto rendimiento, sistemas operativos y videojuegos.",
    "https://cdn.computerhoy.com/sites/navi.axelspringer.es/public/media/image/2025/07/bjarne-stroustrup-4340916.jpg?tf=1200x675", 
    [16]),
    new EventoModel(17,
    "1987", 
    "Perl: procesamiento de texto", 
    "En 1987, Larry Wall creó Perl (Practical Extraction and Report Language), un lenguaje de programación diseñado para facilitar el procesamiento de texto y manipulación de archivos. Combinaba características de C, sed, awk y shell script, lo que lo hizo muy útil para tareas de administración del sistema y programación web. Perl se destacó por su flexibilidad y potencia en el manejo de cadenas y expresiones regulares.",
    "https://www.ecured.cu/images/2/2a/Perl_logo.jpg", 
    [17]),
    new EventoModel(18,
    "1991",
    "Python: legible y versátil",
    "En 1991, Guido van Rossum creó Python, un lenguaje de programación diseñado para ser legible, claro y versátil. Su sintaxis simple lo hizo ideal tanto para principiantes como para expertos. Python se popularizó rápidamente en áreas como desarrollo web, automatización, ciencia de datos e inteligencia artificial, destacándose por su comunidad activa y gran variedad de librerías.",
    "https://cdn.computerhoy.com/sites/navi.axelspringer.es/public/media/image/2025/05/guido-van-rossum-python-4322786.jpg?tf=3840x",
    [18]),
    new EventoModel(19,
    "1991",
    "Visual Basic: programación visual",
    "En 1991, Microsoft lanzó Visual Basic, un lenguaje de programación creado con la colaboración de Alan Cooper. Este lenguaje introdujo una interfaz gráfica que permitía desarrollar aplicaciones de forma visual y rápida, arrastrando y soltando controles. Visual Basic fue clave para facilitar el desarrollo de software en Windows, especialmente para programadores sin experiencia avanzada.",
    "https://danielstevenmoreno15.wordpress.com/wp-content/uploads/2014/09/descarga.jpg?w=584",
    [19]),
    new EventoModel(20,
    "1995",
    "Java: portabilidad y robustez",
    "En 1995, James Gosling y su equipo en Sun Microsystems lanzaron Java, un lenguaje de programación diseñado para ser portable, robusto y seguro. Java permite que los programas se ejecuten en cualquier dispositivo con una máquina virtual Java (JVM), lo que facilitó el desarrollo de aplicaciones multiplataforma. Java se volvió fundamental para aplicaciones web, móviles y empresariales.",
    "https://i.blogs.es/43f88c/james-gosling-java/450_1000.png",
    [20]),
    new EventoModel(21,
    "1995",
    "JavaScript: la web dinámica",
    "En 1995, Brendan Eich creó JavaScript en apenas 10 días mientras trabajaba en Netscape. Este lenguaje permitió agregar interactividad y dinamismo a las páginas web, revolucionando la experiencia del usuario en Internet. JavaScript se convirtió en un pilar fundamental para el desarrollo web moderno, con un ecosistema que incluye frameworks y bibliotecas populares.",
    "https://miro.medium.com/v2/resize:fit:2000/1*W2jZF4FGeFtchSkmEKvrvw.jpeg",
    [21]),
    new EventoModel(22,
    "1995",
    "PHP: lenguaje para la web",
    "En 1995, Rasmus Lerdorf creó PHP (Personal Home Page), un lenguaje de programación orientado a la creación de páginas web dinámicas y aplicaciones del lado del servidor. PHP permitió generar contenido web de manera sencilla y rápida, convirtiéndose en una de las tecnologías más usadas para el desarrollo web durante décadas.",
    "https://disenowebakus.net/imagenes/articulos/logo-php-hypertext-preprocessor.jpg",
    [22]),
    new EventoModel(23,
    "1996",
    "Ruby: simple y elegante",
    "En 1996, Yukihiro Matsumoto creó Ruby, un lenguaje de programación orientado a la simplicidad y productividad, combinando características de Perl, Smalltalk y Lisp. Ruby destaca por su sintaxis elegante y legible, y se popularizó especialmente con el framework Ruby on Rails para desarrollo web.",
    "https://globalprogrammersstories.wordpress.com/wp-content/uploads/2015/02/images-27.jpg",
    [23]),
    new EventoModel(24,
    "2001",
    "Manifiesto Ágil: nuevas formas de trabajar",
    "En 2001, Kent Beck, Martin Fowler, Robert C. Martin y otros creadores del Manifiesto Ágil promovieron un enfoque flexible y colaborativo para el desarrollo de software. El Manifiesto Ágil enfatiza la comunicación, la adaptación al cambio y la entrega continua de valor, revolucionando la gestión y producción de proyectos tecnológicos.",
    "https://i0.wp.com/ipmoguide.com/wp-content/uploads/2018/05/Manifiesto-A%CC%81gil-01.png?fit=550%2C550&ssl=1",
    [24]),
    new EventoModel(25,
    "2002",
    ".NET y C#: desarrollo moderno en Windows",
    "En 2002, Microsoft lanzó la plataforma .NET junto con el lenguaje C#, diseñado por Anders Hejlsberg. C# combinaba la facilidad de Java con el poder de C++, y se integraba completamente con el entorno .NET, permitiendo desarrollar aplicaciones modernas, seguras y eficientes para Windows. Esta plataforma marcó un antes y un después en el desarrollo empresarial y de escritorio.",
    "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F5t2876a077mmqjbc8rdt.png",
    [25]),
    new EventoModel(26,
    "2004",
    "Ruby on Rails: desarrollo web ágil",
    "En 2004, David Heinemeier Hansson creó Ruby on Rails, un framework de desarrollo web basado en el lenguaje Ruby. Rails popularizó el enfoque de 'convención sobre configuración' y permitió desarrollar aplicaciones web de forma rápida, limpia y estructurada. Su impacto fue clave en la evolución del desarrollo ágil y en la creación de startups tecnológicas.",
    "https://m.media-amazon.com/images/I/61NiZbL-SVL._UF1000,1000_QL80_.jpg",
    [26]),
    new EventoModel(27,
    "2007",
    "Primer iPhone: nacimiento de apps móviles",
    "En 2007, Steve Jobs presentó el primer iPhone, revolucionando la industria tecnológica al combinar teléfono, iPod e internet en un solo dispositivo. Este hito marcó el inicio de la era de las aplicaciones móviles y cambió para siempre la forma en que las personas interactúan con la tecnología. El iPhone impulsó el desarrollo de nuevos modelos de negocio y de programación móvil.",
    "https://i.blogs.es/28d59b/iphone1/1366_2000.jpg",
    [27]),


]);

export const seleccionarEvento = (idEvento: number): void => {
  const eventos = get(eventosStore);
  const evento = eventos.find(evento => evento.IdEvento === idEvento);
  if (evento) {
    seleccionarPersonaje(evento.IdPersonajes);
    eventoSeleccionado.set(evento);
  }
};